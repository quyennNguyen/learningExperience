WHAT IS THE DIFFERENCE BETWEEN A WEBSITE, A WEBPAGE, A WEB BROSWER, AND A WEB SERVER?
  A website is a collection of related/interlinked web pages. It is associted with a specific address/URL and a unique domain name on the internet. It delivers information, entertainment, or services to users through a web browser. It is published on at least 1 web server.
  A webpage is a single text document written in HTML and made of multiple elements such as text, images, videos,... It covers a part of the content on a website. It is associted with a specific address/URL on the internet under the domain of a website. It is rendered by a web browser.
  A web broswer is an application for accessing websites. It handles requests from a webpage of a particular website, retrieves requested data from a web server, and displays the content on the user's screen.
  A web server is a website hosting service provider that hosts website component files on an online space (internet) and controls how users access hosted files. Web server and web browser work hand-in-hand to deliver information to the user.

WHAT IS IP ADDRESS?
  Computers, servers, and other devices connected over the same internet protocol are each assigned with a unique string of numbers called the internet protocol (IP) address.
  Every time you access a website, your computer communicates to its web server through your computer's IP address. 

WHAT IS DNS?
  Because the IP address consists of multiple numbers, users would struggle to memorize which string of numbers belongs to the website. 
  As a result, the domain name system (DNS) was born.
  The DNS translates human-readable domain names into IP addresses. 
  You can think of the DNS as a large web address book where computers can look up domain names and match them to their corresponding IP addresses.
  By matching the domain name to the corresponding IP address, DNS guides the web browser to the correct web server hosting the website.

WHAT IS HTTP?
  HTTP, stands for Hyper Text Transfer Protocols, is a communication protocol used to transfer hypertext (text with hyperlinks) over the World Wide Web. 
  It is the foundation of the web, allowing web browsers to retrieve web pages from web servers and display them to users.
  I. Client-Server Model:
    In HTTP, the communication occurs between clients (such as web browsers) and servers (such as web servers). Clients send requests to servers for resources, and servers respond with the requested resources.
  II. Request-Response Cycle:
    HTTP follows a request-response model, where clients send requests to servers, and servers respond with the requested resources or an error message.
  III. Stateless Protocol:
    HTTP is a stateless protocol.
    Each request from a client to a server is independent and does not carry any information about previous requests. 
    Servers do not remember past requests from clients, and clients need to include all necessary information in each request.
  IV. URI:
    URI, stands for Uniform Resource Identifier, is a sequence of character used in HTTP requests to identify the resources on the web such as web pages, images, files,... that clients want to retrieve from servers. 
    A URI distinguishes one resource from another.
    A URI contains scheme, authority, path, query, and a fragment.
      scheme:[//authority]path[?query][#fragment]
      1. Scheme:
        Scheme is a sequence of characters followed by a colon (:).
        Schemes should be registered with Internet Assigned Numbers Authority (IANA).
        Some common URI schemes are http, https, file, data, ftp, irc, idp, telnet,...
      2. Authority:
        Authority is a sequence of characters preceded by 2 forward slashes (//).
        It consists of 3 components:
          a. userinfo: 
            It may contain a username and an optional password separated by colon (:).
            It's followed by an @.
          b. host: 
            It contains either a registered name or an IP address.
            The IP address must be enclosed in a pair of brackets [ ].
          c. port:
            It is optional.
        Authority is optional.
      3. Path:
        Path consists of a sequence of path segments separated by a slash (/).
        It may be empty or of 0 length.
      4. Query:
        Query contains a query string of non-hierarchical data and is preceded by a question mark (?).
        It is optional.
      5. Fragment:
        Fragment consists of a fragment identifier and is preceded by a hash (#).
        It is optional.
    URI consists of URN and URL, to identify the name or location or both of a resource.
      1. URL:
        URL, stands for Uniform Resource Locator, is a reference that specifies the location/address of the resource on the web. (to find its location and to access it)
        Each HTTP URL follows the syntax of its generic URI:
          scheme:[//authority]path[?query][#fragment]
          a. Scheme:
            Scheme represents a protocol that a web browser needs to use to request a resource from a web server.
          b. Authority:
            Authority consists of 2 components separated by colon (:):
              a. domain name: 
                It can be a registered name of the resource.
                Some commonly used protocols for websites are HTTP and HTTPS.
              b. port: 
                It is the technical gate to access the resource on a web server.
                Port 80 is used for HTTP, and port 443 is used for HTTPS.
            Authority is optional.
          c. Path:
            Path specifies a complete path to a resource on a web server.
          d. Query:
            Query contains the name-value pairs that follows the path to provide additional informaiton.
          e. Fragment:
            Fragment provides direction to a secondary resource.
        Each URL can be a URI, but a URI might not be a URL.
        URI can specify name and location of a resource, but URL can only specify the location.
        URI can also find resources in HTML, XML, and other files, but URL can only locate web pages.
      2. URN:
        URN, stands for Uniform Resource Number
  V. Security:
    HTTPS encrypts data between a user’s browser and the server, preventing unauthorized access. 
    By using a secure certificate, it ensures that the data exchanged remains private and integrity is maintained.

WHAT ARE WEBSITE COOKIES?
  Cookies are small text files stored on a user’s browser by websites. They track user behavior, preferences, and login information, enabling personalized experiences and easier navigation on the site.

HOW IS THE FRONTEND OF A WEBSITE DEVELOPED?
  A front-end of a website is developed using HTML, CSS, and JavaScript. HTML structures content, CSS styles it, and JavaScript adds interactivity, collectively creating the visual aspects and user experience.

HOW IS THE BACKEND OF A WEBSITE DEVELOPED?
  The back-end of a website is where data processing occurs. Using languages like PHP or Python and databases like MySQL, it handles data storage, user authentication, and server-side logic.

WHAT IS CMS?
  Content Management Systems (CMS) provide user-friendly interfaces for website management. Users can create, edit, and manage content without coding knowledge, making website maintenance more accessible.