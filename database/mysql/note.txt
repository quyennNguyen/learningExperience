WHAT IS SQL?
    SQL, stands for Structured Query Language, is a programming language used to perform data operations in RDBMS.
    SQL is case-insensitive.

WHAT IS MYSQL?
    MySQL is a type of RDBMS that provides a managing user interface for operating data in a database. 
    It is fast, reliable, scalable, easy to use, and cross-flatform.
    It works in client/server or embedded systems and can be used in both small and large applications.
    It uses the GNU General Public License (GPL) to define what you may and may not do with the software in different situations.
    NOTE:
            MySQL can be case-insensitive in Windows and macOS but can be case-sensitive in Linux.

HOW TO SET UP MYSQL?
    On Ubuntu run: 
        mysql -h 127.0.0.1 -p -u root -p

WHAT ARE MYSQL FUNCTIONS?
    I. SELECT:    
        SELECT is used to get data from the specified fields of the table.
        The returned data is stored in a result table called result set.
        SELECT column1, column2,... FROM table_name;
        SELECT * FROM table_name;
        SELECT DISTINCT column_name FROM table_name;
        SELECT COUNT(DISTINCT column_name) FROM table_name;
    II. WHERE:
        WHERE clause is used to filter the records that fulfill a specified condition.
        Some conditional operators used in WHERE clause are:
            = > < >= <= != <> 
            condition1 AND condition2 AND... 
            condition1 OR condition2 OR...
            NOT condition
            BETWEEN value1 AND value2
            LIKE "pattern"
            IN (value1, value2,...)
        SELECT column1, column2,... FROM table_name WHERE condition;
    III. ORDER BY:
        ORDER BY is used to sort the result table in ascending order (default) or descending order.
        The result table can be ordered by multiple fields, each of which can be specified with either ASC/DESC.
        SELECT column1, column2,... FROM table_name ORDER BY column_name;
        SELECT column1, column2,... FROM table_name ORDER BY column_name ASC;
        SELECT column1, column2,... FROM table_name ORDER BY column_name DESC;
        SELECT column1, column2,... FROM table_name ORDER BY column1 ASC, column2 DESC;
    II. String, Numeric, and Date/Time Functions:
        Reference: https://www.w3schools.com/MySQL/mysql_ref_functions.asp

WHAT ARE MYSQL DATA TYPES?
    When creating a table in a database, each column in the table is required to have a name and a data type.
    The data type of a column defines what type of value the column can hold, which informs SQL what type of data is expected inside the column and how SQL can interact with the stored data.
    1. String:
        CHAR(size)
        VARCHAR(size)
        BINARY(size)
        VARBINARY(size)
        TINYBLOB
        TINYTEXT
        TEXT(size)
        BLOB(size)
        MEDIUMTEXT
        MEDIUMBLOB
        LONGTEXT
        LONGBLOB
        ENUM(val1, val2, val3, ...)
        SET(val1, val2, val3, ...)
        Reference: https://www.w3schools.com/MySQL/mysql_datatypes.asp
    2. Numeric:
        BIT(size)
        TINYINT(size)
        SMALLINT(size)
        MEDIUMINT(size)
        INT(size) or INTEGER(size)
        BIGINT(size)
        FLOAT(p)
        DOUBLE(size, d)
        DEC(size, d) or DECIMAL(size, d)
        NUMERIC
        REAL
        BOOL or BOOLEAN
        Extra attributes (applied to all):
            UNSIGNED
            ZEROFILL
        Reference: https://www.w3schools.com/MySQL/mysql_datatypes.asp
    3. Date/Time:
        DATE
        TIME(fsp)
        DATETIME(fsp)
            Extra attributes:
                DEFAULT
                ON UPDATE
        TIMESTAMP(fsp)
            Extra attributes:
                DEFAULT CURRENT_TIMESTAMP
                ON UPDATE CURRENT_TIMESTAMP
        YEAR
        Reference: https://www.w3schools.com/MySQL/mysql_datatypes.asp
    4. Miscellaneous:    
        IMAGE
        CLOB
        XML
        JSON

WHAT ARE THE TYPES OF RELATIONSHIPS BETWEEN DIFFERENT DATA FIELDS?
    @OneToOne
    @OneToMany
    @ManyToOne
    unique
    required
    optional
    
WHAT IS ALIAS?
    Alias is a shorthand for a table or a column name.
    Using aliases reduces the amount of typing required to enter a query and makes complex queries easier to read.
    It is useful with JOINs and aggregate functions.
    It only exists for the duration of the query.

WHAT ARE THE TYPES OF COMMANDS IN MYSQL?
    1. Data Definition Language (DDL):
        This defines and deals with database schemas and descriptions of how data should exist in the database.
    2. Data Manipulation Language (DML):
        This deals with data manipulation such as storing, retrieving, updating, and deleting data in the database.
    3. Data Control Language (DCL):
    4. Transaction Control Language (TCL):
    5. Aggregate Functions:

SUM UP COMMON MYSQL QUERIES:
    1. For Databases:
        SHOW DATABASES;
        CREATE DATABASE dbname_db;
        USE dbname_db;
        ALTER DATABASE...
    2. For Tables:
        SHOW TABLES;
        CREATE TABLE tbname(name datatype pairs separated by commas); 
        CREATE TABLE tbname(columnname1 DATATYPE, columnname2 DATATYPE, columnname3 DATATYPE);
        DESCRIBE tbname;
        ALTER TABLE tbname RENAME TABLE oldname TO newname;
        DROP TABLE tbname;
    3. For Records:
        SELECT specific columns separated by commas FROM tbname WHERE (multiple conditions separated by AND/OR);
        SELECT * FROM tbname;
        SELECT DISTINT what FROM tbname;
        SELECT what FROM tbname ORDER by what; (ascending order)
        SELECT what FROM tbname ORDER by what DESC; (descending order)
        SELECT what FROM tbname WHERE condition;
        SELECT what FROM tbname WHERE what IN( … );
        SELECT what FROM tbname WHERE what BETWEEN what AND what;
        SELECT what FROM tbname WHERE what LIKE ‘pattern’; (EX: ‘%A%’)
        SELECT what FROM tbname WHERE what LIMIT howmuch;
        INSERT INTO tbname VALUES(values for each column separated by commas);
        INSERT INTO tbname(specific columns separated by commas) VALUES(values for each column separated by commas);
        UPDATE tbname SET what=newvalue WHERE condition;
        DELETE FROM tbname WHERE condition;
        GROUP BY
        HAVING
    4. For Columns:
        ALTER TABLE tbname ADD what datatype;
        ALTER TABLE tbname MODIFY what newdatatype;
        ALTER TABLE tbname CHANGE oldname newname datatype;
        ALTER TABLE tbname RENAME COLUMN oldname TO newname;
        ALTER TABLE tbname DROP what;
    5. For Search Key:
        CREATE INDEX...
        DROP INDEX...
