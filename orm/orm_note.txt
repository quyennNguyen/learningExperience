WHAT IS ORM?
  When interacting with a database using an OOP language, you have to perform different operations on data from the database such as CRUD.
    - C for creating
    - R for reading
    - U for updating
    - D for deleting
  On the other hand, you have to use SQL in a RDBMS to perform these operations.
  ORM, stands for Object Relational Mapping, is a technique that enables you to map objects from your OOP program to an RDBMS to manipulate data from a database.  
    - Object: specifies the objects from your program written in the OOP language of your choice.
    - Relational: specifies the RDBMS that uses tables to manage the data.
    - Mapping: specifies the bridge between the object-oriented program and the relational database, which connects the objects and the tables.
  In general, ORM serves as an abstraction layer between an OOP application and a relational database, simplifies the interaction between them, and helps you build database-backed applications and perform CRUD opeartions without using SQL or going through boilerplate code.
  
WHAT IS ORM LIBRARY?
  ORM library is basically a library that is written in an OOP language of your choice and implements the ORM technique. It encapsulates the code needed to create the bridge between your objects and the data.
  Some common ORM libraries are:
    - JDBC or Hibernate (Java)
    - Django ORM or SQLAlchemy (Python)
    - Propel or Doctrine (PHP)
  
WHAT IS ORM FRAMEWORK?
  In big applications like in Web Programming, using an ORM framework is a way to go as it provides you with all the tools you need for your applications without boilerplate.
  Some common ORM frameworks are:
    - Spring Boot (Java)
    - Django (Python)
    - Symfony (PHP)

WHAT IS JPA?
  JPA, stands for Java Persistence API, is a standard for creating an ORM.